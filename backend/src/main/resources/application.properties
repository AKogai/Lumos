spring.application.name=backend

# Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/appdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true

# Server Configuration
server.port=8080

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY:your-api-key-here}
openai.api.url=https://api.openai.com/v1/chat/completions
openai.model=gpt-3.5-turbo
openai.prompt.template=You will help write personalized condolence messages for posting on memorial pages. You need to create a heartfelt, appropriate message based on the provided information.\n\nHere is information about the deceased person:\n<deceased_info>\n{DECEASED_INFO}\n</deceased_info>\n\nHere is the desired tone for the message:\n<tone>\n{TONE}\n</tone>\n\nHere is the language the condolence message should be written in:\n<language>\n{LANGUAGE}\n</language>\n\nHere is information about the user who will be posting the condolence:\n<user_info>\n{USER_INFO}\n</user_info>\n\nPlease write a sincere condolence message that:\n1. Reflects the specified tone\n2. Is written in the specified language\n3. Is appropriate for posting on a memorial page\n4. Is personal and heartfelt\n5. Respects the memory of the deceased\n\nProvide only the condolence message without any additional explanation or commentary.

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
